version: 2
jobs:
  build:
    working_directory: ~/rails_k8s
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      IMAGE_NAME: roohhiit110393/rails_k8s
      SHA: test
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and Push Docker image
          command: |
            IMAGE_TAG=${CIRCLE_TAG}
            echo "$IMAGE_TAG" > version
            echo "$DOCKERHUB_PASSWORD" | docker login -u roohhiit110393 -p $DOCKERHUB_PASSWORD
            docker build -t $IMAGE_NAME:$SHA . 
            docker push $IMAGE_NAME:latest 
            docker push $IMAGE_NAME:$SHA

  deploy:
    working_directory: ~/rails_k8s
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Present working directory
          command: ls -l
      - run:
          name: Install AWS CLI
          command: sudo apt-get update && sudo apt-get install -y awscli curl
      - run:
          name: Install and configure kubectl
          command: sudo curl -L https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && sudo chmod +x /usr/local/bin/kubectl
      - run:
          name: Install and configure kubectl aws-iam-authenticator
          command: curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator && sudo chmod +x ./aws-iam-authenticator && sudo cp ./aws-iam-authenticator /bin/aws-iam-authenticator
      - run:
          name: Install latest awscli version
          command: sudo apt install unzip && curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip" && unzip awscli-bundle.zip &&./awscli-bundle/install -b ~/bin/aws
      - run:
          name: Install eksctl
          command: curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin && eksctl version
      - run:
          name: Get the kubeconfig file
          command: export KUBECONFIG=$HOME/.kube/kubeconfig && /home/circleci/bin/aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME && kubectl get pods --all-namespaces
      - run:
          name: checking the config
          command: |
            cat $HOME/.kube/kubeconfig
      - run:
          name: Creating the secret
          command: |
            export KUBECONFIG=$HOME/.kube/kubeconfig
            bash exec.sh kubectl create secret generic database --from-literal=database=$DATABASE --namespace='backend'
            bash exec.sh kubectl create secret generic username --from-literal=username=$USERNAME --namespace='backend'
            bash exec.sh kubectl create secret generic password --from-literal=password=$PASSWORD --namespace='backend'
            bash exec.sh kubectl create secret generic host --from-literal=host=$HOST --namespace='backend'
            bash exec.sh kubectl create secret generic port --from-literal=port=$PORT --namespace='backend'
      - run:
          name: Deploying the app
          command: |
            export KUBECONFIG=$HOME/.kube/kubeconfig
            kubectl apply -f k8s 
            kubectl set image deployments/server-deployment server=$IMAGE:$SHA
            kubectl get  ingress --namespace  backend

workflows:
  version: 2
  build_and_tag:
    jobs:
      - build
      - deploy:
          requires:
            - build
