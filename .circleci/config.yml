version: 2
jobs:
  # build:
  #   working_directory: ~/rails_k8s
  #   docker:
  #     - image: circleci/buildpack-deps:stretch
  #   environment:
  #     IMAGE_NAME: roohhiit110393/rails_k8s
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - run:
  #         name: Build and Push Docker image
  #         command: |
  #           IMAGE_TAG=${CIRCLE_TAG}
  #           echo "$IMAGE_TAG" > version
  #           echo "$DOCKERHUB_PASS" | docker login -u roohhiit110393 -p $DOCKERHUB_PASSWORD
  #           docker build  -t $IMAGE_NAME:latest .
  #           docker push $IMAGE_NAME:latest
  build:
    working_directory: ~/rails_k8s
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Present working directory
          command: ls -l
      - run:
          name: Install AWS CLI
          command: sudo apt-get update && sudo apt-get install -y awscli curl
      - run:
          name: Install and configure kubectl
          command: sudo curl -L https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && sudo chmod +x /usr/local/bin/kubectl
      - run:
          name: EXport tag
          command: echo 'export TAG=$0.0.1' >> $BASH_ENV
      - run:
          name: Install and configure kubectl aws-iam-authenticator
          command: curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator && sudo chmod +x ./aws-iam-authenticator && sudo cp ./aws-iam-authenticator /bin/aws-iam-authenticator
      - run:
          name: Install latest awscli version
          command: sudo apt install unzip && curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip" && unzip awscli-bundle.zip &&./awscli-bundle/install -b ~/bin/aws
      - run:
          name: Install eksctl
          command: curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin && eksctl version
      - run:
          name: Get the kubeconfig file
          command: export KUBECONFIG=$HOME/.kube/kubeconfig && /home/circleci/bin/aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME && kubectl get pods --all-namespaces
      - run:
          name: checking the config
          command: |
            cat $HOME/.kube/kubeconfig
      - run:
          name: Running the app
          command: kubectl get pods --all-namespaces
      # - run:
      #     name: Install and configuire helm
      #     command: sudo curl -L https://storage.googleapis.com/kubernetes-helm/helm-v2.11.0-linux-amd64.tar.gz | tar xz && sudo mv linux-amd64/helm /bin/helm && sudo rm -rf linux-amd64
      # - run:
      #     name: Initialize helm
      #     command: helm init --client-only --kubeconfig=$HOME/.kube/kubeconfig
      # - run:
      #     name: Install tiller plugin
      #     command: helm plugin install https://github.com/rimusz/helm-tiller --kubeconfig=$HOME/.kube/kubeconfig
      # - run:
      #     name: Release helloapp using helm chart
      #     command: bash release.sh $TAG
      # - run:
      #     name: ALB end point
      #     command: kubectl get ingress/backend-ingress -n backend

workflows:
  version: 2
  build_and_tag:
    jobs:
      - build
      # - deploy:
      #     requires:
      #       - build
